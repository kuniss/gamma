// declarations/applications: a reduced example

Tab = | id ';' Tab.

DeclAppl <+ Tab>:
    <, Tab>
        { <- Tab, + Tab1>
            'DECL' id< id>
            NotAlreadyDeclared <id, Tab>
            <id ';' Tab, Tab1>
        | <- Tab, + Tab1>
            'APPL' id< id>
            Declared <id, Tab>
            <Tab, Tab1>
        } <- Tab, + Tab>.

letter = 'a' | 'b'.
id* = letter | id letter.

letter:
    <+ 'a': letter> 'a'
  | <+ 'b': letter> 'b'.

id *<+ id>:
    letter <letter>
    <letter, id>
        { <- id, + id1>
            letter <letter>
            <id letter, id1>
        } <- id, + id>.

// helper predicate for better error messages
NotAlreadyDeclared <-id, -Tab>:
    Find <id, Tab, 'FALSE'>.

// helper predicate for better error messages
Declared <-id, -Tab>:
    Find <id, Tab, 'TRUE'>.

Bool = 'TRUE' | 'FALSE'.

Find <- id, - : Tab, + 'FALSE': Bool>: .
Find <- id, - id ';' Tab: Tab, + 'TRUE': Bool>: .
Find <- id, - !id ';' Tab: Tab, + Bool>:
    Find <id, Tab, Bool>.
